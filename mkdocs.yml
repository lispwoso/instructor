site_name: Instructor
site_author: Jason Liu
site_description: A lightweight library for structured outputs with LLMs. 
repo_name: instructor
repo_url: https://github.com/jxnl/instructor/
site_url: https://python.useinstructor.com/ 
edit_uri: edit/main/docs/
copyright: Copyright &copy; 2024 Jason Liu 
theme:
  name: material
  icon:
    repo: fontawesome/brands/github
    edit: material/pencil 
    view: material/eye
    theme:
    admonition:
      note: octicons/tag-16
      abstract: octicons/checklist-16
      info: octicons/info-16
      tip: octicons/squirrel-16
      success: octicons/check-16
      question: octicons/question-16
      warning: octicons/alert-16
      failure: octicons/x-circle-16
      danger: octicons/zap-16
      bug: octicons/bug-16
      example: octicons/beaker-16
      quote: octicons/quote-16
  features:
    - announce.dismiss
    - content.action.edit
    - content.action.view
    - content.code.annotate
    - content.code.copy
    - content.code.select
    - content.tabs.link
    - content.tooltips
    - header.autohide
    - navigation.expand
    - navigation.footer
    - navigation.indexes
    - navigation.instant
    - navigation.instant.prefetch
    - navigation.instant.progress
    - navigation.prune
    - navigation.sections
    - navigation.tabs
    # - navigation.tabs.sticky
    - navigation.top
    - navigation.tracking
    - search.highlight
    - search.share
    - search.suggest
    - toc.follow
    # - toc.integrate
  palette:
      - scheme: default
        primary: black 
        accent: indigo
        toggle:
          icon: material/brightness-7
          name: Switch to dark mode
      - scheme: slate
        primary: black
        accent: indigo
        toggle:
          icon: material/brightness-4
          name: Switch to light mode
  font:
    text: Roboto
    code: Roboto Mono
  custom_dir: docs/overrides
# Extensions
markdown_extensions:
  - abbr
  - admonition
  - pymdownx.details
  - attr_list
  - def_list
  - footnotes
  - md_in_html
  - toc:
      permalink: true
  - pymdownx.arithmatex:
      generic: true
  - pymdownx.betterem:
      smart_enable: all
  - pymdownx.caret
  - pymdownx.details
  - pymdownx.emoji:
      emoji_generator: !!python/name:material.extensions.emoji.to_svg
      emoji_index: !!python/name:material.extensions.emoji.twemoji
  - pymdownx.highlight:
      anchor_linenums: true
      line_spans: __span
      pygments_lang_class: true
  - pymdownx.inlinehilite
  - pymdownx.keys
  - pymdownx.magiclink:
      normalize_issue_symbols: true
      repo_url_shorthand: true
      user: jxnl 
      repo: instructor
  - pymdownx.mark
  - pymdownx.smartsymbols
  - pymdownx.snippets:
      auto_append:
        - includes/mkdocs.md
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.tabbed:
      alternate_style: true
      combine_header_slug: true
  - pymdownx.tasklist:
      custom_checkbox: true
  - pymdownx.arithmatex:
      generic: true
      
extra_javascript:
  - javascripts/katex.js
  - https://unpkg.com/katex@0/dist/katex.min.js
  - https://unpkg.com/katex@0/dist/contrib/auto-render.min.js

extra_css:
  - https://unpkg.com/katex@0/dist/katex.min.css
nav:
  - Introduction: 
    - Welcome To Instructor: 'index.md'
    - Why use Instructor?: 'why.md'
    - Help with Instructor: 'help.md'
    - Newsletter: 'newsletter.md'
    - Installation: 'installation.md'
    - Contributing: 'contributing.md'
    - Philosophy: 'concepts/philosophy.md'
  - Cookbook:
    - Cookbooks: 'examples/index.md'
    - "Enhancing Text Classification": 'examples/classification.md'
    - "Local Classification with Llama-cpp": 'examples/local_classification.md'
    - "Structured Outputs with Ollama": 'examples/ollama.md'
    - "Multi-Modal Data with Gemini": 'examples/multi_modal_gemini.md'
    - "Exact Citations for RAG": 'examples/exact_citations.md'
    - "Extracting Knowledge Graphs": 'examples/knowledge_graph.md'
    - "Table Extraction with GPT-4 Vision": 'examples/extracting_tables.md'
    - "User-Defined Bulk Classification": 'examples/bulk_classification.md'
    - "AI Model Self-Correction": 'examples/self_critique.md'
    - "Receipt Data Extraction with GPT-4": 'examples/extracting_receipts.md'
    - "Slide Data Extraction with GPT-4": 'examples/extract_slides.md'
    - "Content Moderation with OpenAI": 'examples/moderation.md'
    - "Complex Entity Resolution": 'examples/entity_resolution.md'
    - "Expanding RAG Search Queries": 'examples/search.md'
    - "RAG Query Planning": 'examples/planning-tasks.md'
    - "PII Data Sanitization": 'examples/pii.md'
    - "Integrating Open Source Models": 'examples/open_source.md'
    - "Image to Ad Copy Generation": 'examples/image_to_ad_copy.md'
    - "SQLModel Integration": 'examples/sqlmodel.md'
    - "Examples in Pydantic Models": 'examples/examples.md'
    - "Intelligent Document Segmentation": 'examples/document_segmentation.md'
    - "Structured Output with watsonx.ai": 'examples/watsonx.md'
    - "OpenAI Batch Jobs with Instructor": 'examples/batch_job_oai.md'
  - Blog:
    - "blog/index.md"
  - Concepts:
    - Models: 'concepts/models.md'
    - Multimodal : 'concepts/multimodal.md'
    - Retrying: 'concepts/retrying.md'
    - Patching: 'concepts/patching.md'
    - Hooks: 'concepts/hooks.md'
    - Fields: 'concepts/fields.md'
    - Types: 'concepts/types.md'
    - TypedDicts: 'concepts/typeddicts.md'
    - Validators: "concepts/reask_validation.md"
    - Usage Tokens: 'concepts/usage.md'
    - Missing: "concepts/maybe.md"
    - Parallel Tools: 'concepts/parallel.md'
    - Stream Iterable: "concepts/lists.md"
    - Stream Partial: "concepts/partial.md"
    - Raw Response: 'concepts/raw_response.md'
    - FastAPI: 'concepts/fastapi.md'
    - Caching: 'concepts/caching.md'
    - Prompt Caching: 'concepts/prompt_caching.md'
    - Logging: 'concepts/logging.md'
    - Distillation: "concepts/distillation.md"
    - Union: 'concepts/union.md'
    - Alias: 'concepts/alias.md'
    - Enums: 'concepts/enums.md'
    - Type Adapter: 'concepts/typeadapter.md'
    - Templating: 'concepts/templating.md'
  - Hub:
    - Introduction to Instructor Hub: 'hub/index.md'
    - Single Classification with Instructor: 'hub/single_classification.md'
    - Multiple Classification with Instructor: 'hub/multiple_classification.md'
    - Extracting Tables from Images with GPT-4 Vision: 'hub/tables_from_vision.md'
    - Creating Pandas DataFrames from AI Outputs: 'hub/pandas_df.md'
    - Integrating Vertex AI with Instructor: 'hub/vertexai.md'
    - Using Ollama with Instructor: 'hub/ollama.md'
    - Integrating llama-cpp-python with Instructor: 'hub/llama-cpp-python.md'
    - Using Together Compute with Instructor: 'hub/together.md'
    - Integrating Anyscale with Instructor: 'hub/anyscale.md'
    - Using Groq with Instructor: 'hub/groq.md'
    - Integrating Mistral AI with Instructor: 'hub/mistral.md'
    - Using Cohere with Instructor: 'hub/cohere.md'
    - Bulk Async Classification with LangSmith: 'hub/batch_classification_langsmith.md'
    - Extracting Action Items from Text: 'hub/action_items.md'
    - Implementing Partial Streaming Responses: 'hub/partial_streaming.md'
    - Extracting Contact Information from Text: 'hub/extract_contact_info.md'
    - Advanced Usage of Mistral Large: 'hub/mistral.md'
    - Generating Knowledge Graphs with AI: 'hub/knowledge_graph.md'
    - Extracting Relevant Clips from YouTube Videos: "hub/youtube_clips.md"
    - Building Knowledge Graphs: 'tutorials/5-knowledge-graphs.ipynb'
  - CLI Reference:
      - "CLI Reference": "cli/index.md"
      - "Finetuning GPT-3.5": "cli/finetune.md"
      - "Usage Tracking": "cli/usage.md"
      - "Batch Jobs": "cli/batch.md"
  - Tutorials:
    - Tutorials (Notebooks): 'tutorials/1-introduction.ipynb'
    - Tips and Tricks: 'tutorials/2-tips.ipynb'
    - Applications RAG: 'tutorials/3-0-applications-rag.ipynb'
    - Applications RAG - 2: 'tutorials/3-1-validation-rag.ipynb'
    - Validation: 'tutorials/4-validation.ipynb'
    - Synthetic Data Generation: 'tutorials/7-synthetic-data-generation.ipynb'
  - Jobs Board (External):
    - Jobs: 'jobs.md'
  - Prompt Design:
    - "prompting/index.md"
    - Zero-Shot:
      - Use Emotional Language: 'prompting/zero_shot/emotion_prompting.md'
      - Assign a Role: 'prompting/zero_shot/role_prompting.md'
      - Define A Style: 'prompting/zero_shot/style_prompting.md'
      - Auto-Refine The Prompt: 'prompting/zero_shot/s2a.md'
      - Simulate A Perspective: 'prompting/zero_shot/simtom.md'
      - Clarify Ambiguous Information: 'prompting/zero_shot/rar.md' 
      - Ask Model To Repeat Query: 'prompting/zero_shot/re2.md'
      - Generate Follow-Up Questions: 'prompting/zero_shot/self_ask.md'
    - Few-Shot:
      - Example Generation:
        - Generate In-Context Examples: 'prompting/few_shot/example_generation/sg_icl.md'
      - Example Ordering: 'prompting/few_shot/example_ordering.md'
      - Exemplar Selection:
        - Select Effective Examples: 'prompting/few_shot/exemplar_selection/knn.md'
        - Vote-K: 'prompting/few_shot/exemplar_selection/vote_k.md'
    - Thought Generation:
      - Chain-Of-Thought (Zero-Shot):
        - Generate Examples First: 'prompting/thought_generation/chain_of_thought_zero_shot/analogical_prompting.md'
        - Consider Higher-Level Context: 'prompting/thought_generation/chain_of_thought_zero_shot/step_back_prompting.md'
        - Examine The Context: 'prompting/thought_generation/chain_of_thought_zero_shot/thread_of_thought.md'
        - Structure The Reasoning: 'prompting/thought_generation/chain_of_thought_zero_shot/tab_cot.md'
      - Chain-Of-Thought (Few-Shot):
        - Prioritize Uncertain Examples: 'prompting/thought_generation/chain_of_thought_few_shot/active_prompt.md'
        - Automate Example Selection: 'prompting/thought_generation/chain_of_thought_few_shot/auto_cot.md'
        - Prioritize Complex Examples: 'prompting/thought_generation/chain_of_thought_few_shot/complexity_based.md'
        - Include Incorrect Examples: 'prompting/thought_generation/chain_of_thought_few_shot/contrastive.md'
        - Memory-of-Thought: 'prompting/thought_generation/chain_of_thought_few_shot/memory_of_thought.md'
        - Use Majority Voting: 'prompting/thought_generation/chain_of_thought_few_shot/uncertainty_routed_cot.md'
        - Generate Prompt Variations: 'prompting/thought_generation/chain_of_thought_few_shot/prompt_mining.md'
    - Ensembling:
      - Prioritize Consistent Examples: 'prompting/ensembling/cosp.md'
      - Use Distinct Example Subsets: 'prompting/ensembling/dense.md'
      - Verify Responses over Majority Voting : 'prompting/ensembling/diverse.md'
      - Use Ensembles To Test Prompts: 'prompting/ensembling/max_mutual_information.md'
      - Combine Multiple Reasoning Chains: 'prompting/ensembling/meta_cot.md'
      - Combine Different Specialized LLMs: 'prompting/ensembling/more.md'
      - Generate Multiple Candidate Responses: 'prompting/ensembling/self_consistency.md'
      - Use LLMs to Combine Different Responses: 'prompting/ensembling/universal_self_consistency.md'
      - Use Task Specific Evaluation Metrics: 'prompting/ensembling/usp.md'
      - Use Translation for Paraphrasing: 'prompting/ensembling/prompt_paraphrasing.md'
    - Self-Criticism:
      - Independently Verify Responses: 'prompting/self_criticism/chain_of_verification.md'
      - Determine Uncertainty of Reasoning Chain: 'prompting/self_criticism/self_calibration.md'
      - Improve With Feedback: 'prompting/self_criticism/self_refine.md'
      - Self-Verify Responses: 'prompting/self_criticism/self_verification.md'
      - Reconstruct Prompt from Reasoning Steps : 'prompting/self_criticism/reversecot.md'
      - Break Down Reasoning Into Multiple Steps: 'prompting/self_criticism/cumulative_reason.md'
    - Decomposition:
      - Break Down Complex Tasks: 'prompting/decomposition/decomp.md'
      - Leverage Task Specific Systems: 'prompting/decomposition/faithful_cot.md'
      - Solve simpler subproblems: 'prompting/decomposition/least_to_most.md'
      - Ditch Vanilla Chain Of Thought: 'prompting/decomposition/plan_and_solve.md'
      - Generate Python for Intermediate Steps: 'prompting/decomposition/program_of_thought.md'
      - Recurs.-of-Thought: 'prompting/decomposition/recurs_of_thought.md'
      - Generate in Parallel: 'prompting/decomposition/skeleton_of_thought.md'
      - Tree-of-Thought: 'prompting/decomposition/tree-of-thought.md'
plugins:
  - redirects:
      redirect_maps:
         jobs.md: https://jobs.applied-llms.org/
  - mkdocs-jupyter:
      ignore_h1_titles: true
      execute: false
  - social
  - search:
      separator: '[\s\u200b\-_,:!=\[\]()"`/]+|\.(?!\d)|&[lg]t;|(?!\b)(?=[A-Z][a-z])'
  - minify:
      minify_html: true
  - mkdocstrings:
      handlers:
        python:
          options:
            members_order: alphabetical
            allow_inspection: true
            show_bases: true
  - blog:
      enabled: !ENV CI
      blog_dir: "blog"
      blog_toc: true
      post_dir: blog/posts
      post_date_format: yyyy/MM/dd
      post_url_format: "{date}/{slug}"
      authors_file: "{blog}/.authors.yml"
hooks:
  - docs/hooks/hide_lines.py
extra:
  analytics:
    provider: google
    property: G-5CR8QXF5CN
    feedback:
      title: Was this page helpful?
      ratings:
        - icon: material/emoticon-happy-outline
          name: This page was helpful
          data: 1
          note: >-
            Thanks for your feedback!
        - icon: material/emoticon-sad-outline
          name: This page could be improved
          data: 0
          note: >- 
            Thanks for your feedback! Help us improve this page by
            using our <a href="https://forms.gle/ijr9Zrcg2QWgKoWs7" target="_blank" rel="noopener">feedback form</a>.
  social:
    - icon: fontawesome/brands/twitter
      link: https://twitter.com/jxnlco
    - icon: fontawesome/brands/github
      link: https://github.com/jxnl
